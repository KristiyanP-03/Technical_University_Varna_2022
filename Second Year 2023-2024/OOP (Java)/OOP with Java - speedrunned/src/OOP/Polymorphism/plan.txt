1. Пренатоварване (overloading)
Полиморфизъм по време на компилиране използва пренатоварване (overloading) на метода.
Методите в един клас могат да има едно и също име , но трябва да приемат различен брой параметри.
Различни имплементации могат да съществуват в зависимост от броя на подаваните параметри и типа на
параметрите.

Изисквания:
· Да има същото име;
· Да има различен брой параметри или да има различен тип параметри;

Не може да имаме повече от един параметър с еднакъв брой и тип параметри.

Не може да имаме два метода, които имат еднакъв брой и тип параметри, но връщат различен тип,
защото компилатора няма да знае кой от двата метода да извика.



2. Презаписване (overriding)
Полиморфизъм по време на изпълнение (runtime) използва пренаписване на метода (overriding).
Клас наследник може да предостави различна имплементация от имплементацията на класа родител.
Инструкцията към компилатора която използваме е @Override – показва на компилатора, че този метод
от родителския клас има нова имплементация. Тази инструкция (анотация) се използва по време
 на компилирането, за да се провери дали метода е презаписан правилно.

Изисквания за презаписване на метод:
· Да носи същото име като метода в родителския клас;
· Да приема същия брой параметри;
· Да приема параметри от същия тип ;
· Да връща същия тип.

Статични методи не могат да бъдат презаписвани, защото принадлежат на класа, докато инстанциите
на методите (нестатичните) принадлежат на обекта.